name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t hardddyy/flask-app:latest .

      - name: Push Docker image
        run: docker push hardddyy/flask-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set up KinD cluster
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster

      - name: Set up Kubernetes context for KinD
        run: kubectl cluster-info --context kind-kind

      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s-deployment.yaml

      - name: Wait for deployment
        run: kubectl rollout status -f k8s-deployment.yaml --timeout=600s

      - name: Log deployment status
        run: |
          kubectl get pods
          kubectl get services
          kubectl get deployments

      - name: Check Flask app response
        run: |
          POD_NAME=$(kubectl get pods -l app=flask-app -o jsonpath="{.items[0].metadata.name}")
          kubectl port-forward $POD_NAME 5000:5000 &
          sleep 10
          curl http://localhost:5000

      - name: Notify Slack or log
        if: failure()
        run: echo "Deployment failed!"
