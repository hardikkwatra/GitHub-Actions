name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: docker build -t hardddyy/flask-app:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push <your-dockerhub-username>/flask-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Kubernetes CLI (kubectl)
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Set up Minikube context using KUBE_CONFIG
      - name: Set up Minikube context
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBECONFIG" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl cluster-info

      # Apply Kubernetes deployment YAML
      - name: Deploy to Minikube
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBECONFIG" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl apply -f k8s-deployment.yaml

      # Log deployment status
      - name: Check deployment status
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBECONFIG" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl get pods
          kubectl get services

      # Check logs of the deployed application
      - name: Check Flask app logs
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBECONFIG" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          POD_NAME=$(kubectl get pods -l app=flask-app -o jsonpath="{.items[0].metadata.name}")
          kubectl logs $POD_NAME
